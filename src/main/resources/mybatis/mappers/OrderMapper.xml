<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="sf.dao.OrderMapper" >
  <resultMap id="BaseResultMap" type="sf.entity.Order" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="goods_id" property="goodsId" jdbcType="INTEGER" />
    <result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
    <result column="buy_number" property="buyNumber" jdbcType="INTEGER" />
    <result column="seckill_price" property="seckillPrice" jdbcType="DECIMAL" />
    <result column="order_status" property="orderStatus" jdbcType="VARCHAR" />
    <result column="order_time" property="orderTime" jdbcType="TIMESTAMP" />
    <result column="buy_time" property="buyTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, goods_id, goods_name, buy_number, seckill_price, order_status, order_time, 
    buy_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="sf.entity.OrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="sf.entity.OrderExample" >
    delete from order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="sf.entity.Order" >
    insert into order (id, user_id, goods_id, 
      goods_name, buy_number, seckill_price, 
      order_status, order_time, buy_time
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, 
      #{goodsName,jdbcType=VARCHAR}, #{buyNumber,jdbcType=INTEGER}, #{seckillPrice,jdbcType=DECIMAL}, 
      #{orderStatus,jdbcType=VARCHAR}, #{orderTime,jdbcType=TIMESTAMP}, #{buyTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="sf.entity.Order" >
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="goodsName != null" >
        goods_name,
      </if>
      <if test="buyNumber != null" >
        buy_number,
      </if>
      <if test="seckillPrice != null" >
        seckill_price,
      </if>
      <if test="orderStatus != null" >
        order_status,
      </if>
      <if test="orderTime != null" >
        order_time,
      </if>
      <if test="buyTime != null" >
        buy_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null" >
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null" >
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="buyNumber != null" >
        #{buyNumber,jdbcType=INTEGER},
      </if>
      <if test="seckillPrice != null" >
        #{seckillPrice,jdbcType=DECIMAL},
      </if>
      <if test="orderStatus != null" >
        #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null" >
        #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="buyTime != null" >
        #{buyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="sf.entity.OrderExample" resultType="java.lang.Integer" >
    select count(*) from order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null" >
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsName != null" >
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.buyNumber != null" >
        buy_number = #{record.buyNumber,jdbcType=INTEGER},
      </if>
      <if test="record.seckillPrice != null" >
        seckill_price = #{record.seckillPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.orderStatus != null" >
        order_status = #{record.orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.orderTime != null" >
        order_time = #{record.orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.buyTime != null" >
        buy_time = #{record.buyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update order
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      buy_number = #{record.buyNumber,jdbcType=INTEGER},
      seckill_price = #{record.seckillPrice,jdbcType=DECIMAL},
      order_status = #{record.orderStatus,jdbcType=VARCHAR},
      order_time = #{record.orderTime,jdbcType=TIMESTAMP},
      buy_time = #{record.buyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="sf.entity.Order" >
    update order
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null" >
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null" >
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="buyNumber != null" >
        buy_number = #{buyNumber,jdbcType=INTEGER},
      </if>
      <if test="seckillPrice != null" >
        seckill_price = #{seckillPrice,jdbcType=DECIMAL},
      </if>
      <if test="orderStatus != null" >
        order_status = #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null" >
        order_time = #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="buyTime != null" >
        buy_time = #{buyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="sf.entity.Order" >
    update order
    set user_id = #{userId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      buy_number = #{buyNumber,jdbcType=INTEGER},
      seckill_price = #{seckillPrice,jdbcType=DECIMAL},
      order_status = #{orderStatus,jdbcType=VARCHAR},
      order_time = #{orderTime,jdbcType=TIMESTAMP},
      buy_time = #{buyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>